import React, { useState, useEffect } from 'react';
import { doc, setDoc } from 'firebase/firestore';
import { db } from './firebase';
import liff from '@line/liff';
import { useNavigate } from 'react-router-dom';

const Register = () => {
  const [formData, setFormData] = useState({
    fullname: '',
    phone: '',
    room: '',
    building: '',
    role: '',
    keycode: '',
  });

  const [userId, setUserId] = useState(null);
  const [displayName, setDisplayName] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    const initLiff = async () => {
      try {
        await liff.init({ liffId: 'YOUR_LIFF_ID' }); // üîÅ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á
        if (!liff.isLoggedIn()) {
          liff.login();
          return;
        }

        const profile = await liff.getProfile();
        console.log('LIFF profile:', profile);
        setUserId(profile.userId);
        setDisplayName(profile.displayName);
      } catch (err) {
        console.error('LIFF init error:', err);
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö LINE ‡πÑ‡∏î‡πâ');
      }
    };
    initLiff();
  }, []);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!userId) {
      alert("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ LINE");
      return;
    }

    if (formData.role === 'technician' && formData.keycode !== '12345') {
      alert("‡∏£‡∏´‡∏±‡∏™‡∏ä‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      return;
    }

    try {
      await setDoc(doc(db, 'users', userId), {
        name: formData.fullname,
        phone: formData.phone,
        room: formData.room,
        building: formData.building,
        role: formData.role,
        keycode: formData.role === 'technician' ? formData.keycode : '',
        displayName,
      });

      alert('‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

      // üîÅ ‡πÄ‡∏õ‡∏¥‡∏î Rich Menu ‡∏ï‡∏≤‡∏° Role
      switch (formData.role) {
        case 'resident':
          await liff.sendMessages([{ type: 'text', text: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏ö‡πâ‡∏≤‡∏ô üë§' }]);
          liff.closeWindow(); // ‡∏´‡∏£‡∏∑‡∏≠ navigate ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô
          break;
        case 'juristic':
          await liff.sendMessages([{ type: 'text', text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏ô‡∏¥‡∏ï‡∏¥‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• üßë‚Äçüíº' }]);
          liff.closeWindow();
          break;
        case 'technician':
          await liff.sendMessages([{ type: 'text', text: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏≤‡∏á üîß' }]);
          liff.closeWindow();
          break;
        default:
          alert('‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      }
    } catch (err) {
      console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô");
    }
  };

  return (
    <div className="container">
      <h2>‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
      <form onSubmit={handleSubmit}>
        <input type="text" name="fullname" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" onChange={handleChange} required />
        <input type="tel" name="phone" placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£" onChange={handleChange} required />
        <input type="text" name="room" placeholder="‡∏´‡πâ‡∏≠‡∏á" onChange={handleChange} required />
        <input type="text" name="building" placeholder="‡∏ï‡∏∂‡∏Å" onChange={handleChange} required />

        <select name="role" value={formData.role} onChange={handleChange} required>
          <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó</option>
          <option value="resident">‡∏•‡∏π‡∏Å‡∏ö‡πâ‡∏≤‡∏ô</option>
          <option value="juristic">‡∏ô‡∏¥‡∏ï‡∏¥‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</option>
          <option value="technician">‡∏ä‡πà‡∏≤‡∏á</option>
        </select>

        {/* ‡πÅ‡∏™‡∏î‡∏á Keycode ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≤‡∏á */}
        {formData.role === 'technician' && (
          <input
            type="password"
            name="keycode"
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ä‡πà‡∏≤‡∏á"
            value={formData.keycode}
            onChange={handleChange}
            required
          />
        )}

        <button type="submit">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</button>
      </form>
    </div>
  );
};

export default Register;
